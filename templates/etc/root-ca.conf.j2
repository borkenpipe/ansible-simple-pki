# Simple Root CA

# The [default] section contains global constants that can be referred to from
# the entire configuration file. It may also hold settings pertaining to more
# than one openssl command.

[ default ]
# CA name
ca = {{simplepki_root_ca_name}}  
suffix = "Root CA"

# The next part of the configuration file is used by the openssl req command.
# It defines the CA's key pair, its DN, and the desired extensions for the CA
# certificate.

[ req ]
{% include 'inc/request.txt' %}

distinguished_name = ca_dn # DN section
req_extensions = ca_reqext # Desired extensions

[ ca_dn ]
{% include 'inc/ca_dn.txt' %}

[ ca_reqext ]
keyUsage = critical,keyCertSign,cRLSign
basicConstraints = critical,CA:true
subjectKeyIdentifier = hash

# The remainder of the configuration file is used by the openssl ca command.
# The CA section defines the locations of CA assets, as well as the policies
# applying to the CA.

[ ca ]
# The default CA section
default_ca = root_ca               

[ root_ca ]
# The CA cert
certificate = {{ simplepki_ca_base_dir }}/{{simplepki_root_ca_name}}{{ simplepki_file_ext_crt }}
# CA private key
private_key = {{ simplepki_root_ca_private_dir }}/{{simplepki_root_ca_name}}{{ simplepki_file_ext_key }} 
# Certificate archive
new_certs_dir = {{simplepki_root_ca_dir}} 
# Serial number file
serial = {{simplepki_root_ca_db_dir}}/{{simplepki_root_ca_name}}.crt.srl
# CRL number file
crlnumber = {{simplepki_root_ca_db_dir}}/{{simplepki_root_ca_name}}.crl.srl 
# Index file
database = {{simplepki_root_ca_db_dir}}/{{simplepki_root_ca_name}}.db  

{% include 'inc/ca_defaults.txt' %}

# Default cert extensions
x509_extensions = signing_ca_ext    
# How long before next CRL    
default_crl_days = 90  
# Copy extensions from CSR                  
copy_extensions = none  
# How long to certify for                
default_days = 3652                  

# Naming policies control which parts of a DN end up in the certificate and
# under what circumstances certification should be denied.
{% include 'inc/ca_policy.txt' %}

# Certificate extensions define what types of certificates the CA is able to
# create.

[ root_ca_ext ]
keyUsage = critical,keyCertSign,cRLSign
basicConstraints = critical,CA:true
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer:always

[ signing_ca_ext ]
keyUsage = critical,keyCertSign,cRLSign
basicConstraints = critical,CA:true,pathlen:0
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer:always

[ crl_ext ]
authorityKeyIdentifier = keyid:always,issuer:always
